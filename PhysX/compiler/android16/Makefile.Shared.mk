# Makefile generated by XPJ for ANDROID16
-include Makefile.custom
ProjectName = Shared
Shared_cppfiles   += ./../../Source/BoxCollider.cpp
Shared_cppfiles   += ./../../Source/CapsuleCollider.cpp
Shared_cppfiles   += ./../../Source/CapsuleController.cpp
Shared_cppfiles   += ./../../Source/Collider.cpp
Shared_cppfiles   += ./../../Source/ColliderBase.cpp
Shared_cppfiles   += ./../../Source/Common.cpp
Shared_cppfiles   += ./../../Source/ControllerFilterCallback.cpp
Shared_cppfiles   += ./../../Source/dllmain.cpp
Shared_cppfiles   += ./../../Source/LayerFilterCallback.cpp
Shared_cppfiles   += ./../../Source/MeshCollider.cpp
Shared_cppfiles   += ./../../Source/PhysicsManager.cpp
Shared_cppfiles   += ./../../Source/PhysXDll.cpp
Shared_cppfiles   += ./../../Source/QueryFilterCallback.cpp
Shared_cppfiles   += ./../../Source/RaycastCallback.cpp
Shared_cppfiles   += ./../../Source/SceneQuerier.cpp
Shared_cppfiles   += ./../../Source/SphereCollider.cpp
Shared_cppfiles   += ./../../Source/stdafx.cpp
Shared_cppfiles   += ./../../Source/SweepCastCallback.cpp
Shared_cppfiles   += ./../../Source/UserAssertHandler.cpp
Shared_cppfiles   += ./../../Source/UserControllerHitReportCallback.cpp
Shared_cppfiles   += ./../../Source/UserErrorCallback.cpp

Shared_cpp_debug_dep    = $(addprefix $(DEPSDIR)/Shared/debug/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(Shared_cppfiles)))))
Shared_cc_debug_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.debug.P, $(Shared_ccfiles)))))
Shared_c_debug_dep      = $(addprefix $(DEPSDIR)/Shared/debug/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(Shared_cfiles)))))
Shared_debug_dep      = $(Shared_cpp_debug_dep) $(Shared_cc_debug_dep) $(Shared_c_debug_dep)
-include $(Shared_debug_dep)

Shared_cpp_release_dep    = $(addprefix $(DEPSDIR)/Shared/release/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(Shared_cppfiles)))))
Shared_cc_release_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.release.P, $(Shared_ccfiles)))))
Shared_c_release_dep      = $(addprefix $(DEPSDIR)/Shared/release/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(Shared_cfiles)))))
Shared_release_dep      = $(Shared_cpp_release_dep) $(Shared_cc_release_dep) $(Shared_c_release_dep)
-include $(Shared_release_dep)

Shared_debug_hpaths    := 
Shared_debug_hpaths    += ./../../../Include
Shared_debug_hpaths    += ./../../../../PxShared/include
Shared_debug_hpaths    += ./../../../../PxShared/src/foundation/include
#Shared_debug_hpaths    += ./../../../../PxShared/src/fastxml/include
Shared_debug_hpaths    += ./../../../../Externals/android-ndk-r9d/sources/cxx-stl/gnu-libstdc++/4.8/include
Shared_debug_hpaths    += ./../../../../Externals/android-ndk-r9d/sources/cxx-stl/gnu-libstdc++/4.8/libs/armeabi-v7a/include
Shared_debug_lpaths    := 
Shared_debug_lpaths    += ./../../../../Externals/nvToolsExt/1/lib/armv7
Shared_debug_lpaths    += ./../../../Lib/android16
#Shared_debug_lpaths    += ./../../lib/android16
Shared_debug_lpaths    += ./../../../../PxShared/lib/android16
#Shared_debug_lpaths    += ./../../lib/android16
Shared_debug_defines   := $(Shared_custom_defines)
Shared_debug_defines   += ANDROID
Shared_debug_defines   += GLES2
Shared_debug_defines   += __STDC_LIMIT_MACROS
Shared_debug_defines   += __ARM_ARCH_5__
Shared_debug_defines   += __ARM_ARCH_5T__
Shared_debug_defines   += __ARM_ARCH_5E__
Shared_debug_defines   += __ARM_ARCH_5TE__
Shared_debug_defines   += _DEBUG
Shared_debug_defines   += PX_DEBUG=1
Shared_debug_defines   += PX_CHECKED=1
#Shared_debug_defines   += PX_SUPPORT_PVD=1
Shared_debug_defines   += PX_NVTX=1
Shared_debug_defines   += PHYSX_PROFILE_SDK
Shared_debug_libraries := 
#Shared_debug_libraries += SnippetUtilsDEBUG
Shared_debug_libraries += log
Shared_debug_libraries += gnustl_static
Shared_debug_libraries += supc++
Shared_debug_libraries += m
Shared_debug_libraries += c
Shared_debug_libraries += nvToolsExt
Shared_debug_libraries += PhysX3CommonDEBUG
Shared_debug_libraries += PhysX3DEBUG
#Shared_debug_libraries += PhysX3VehicleDEBUG
Shared_debug_libraries += PhysX3CookingDEBUG
Shared_debug_libraries += PhysX3ExtensionsDEBUG
Shared_debug_libraries += PhysX3CharacterKinematicDEBUG
#Shared_debug_libraries += SnippetUtilsDEBUG
Shared_debug_libraries += PxFoundationDEBUG
#Shared_debug_libraries += PsFastXmlDEBUG
Shared_debug_libraries += PxPvdSDKDEBUG
Shared_debug_common_cflags	:= $(Shared_custom_cflags)
Shared_debug_common_cflags    += -MMD
Shared_debug_common_cflags    += $(addprefix -D, $(Shared_debug_defines))
Shared_debug_common_cflags    += $(addprefix -I, $(Shared_debug_hpaths))
Shared_debug_common_cflags  += -Werror
#Shared_debug_common_cflags  += -fpic -fno-exceptions //异常没有处理会报错
Shared_debug_common_cflags  += -fpic -fexceptions -fpermissive
Shared_debug_common_cflags  += -isysroot ../../../../Externals/android-ndk-r9d/platforms/android-16/arch-arm
Shared_debug_common_cflags  += -march=armv7-a -mfpu=neon -marm -mfloat-abi=softfp -mthumb-interwork
#Shared_debug_common_cflags  += -Wall -Wextra -Wpedantic -Wstrict-aliasing=2 //否则会有#pragma的报错
Shared_debug_common_cflags  += -Wno-maybe-uninitialized
Shared_debug_common_cflags  += -Wno-pedantic
Shared_debug_common_cflags  += -fPIE
Shared_debug_common_cflags  += -g3 -gdwarf-2
Shared_debug_cflags	:= $(Shared_debug_common_cflags)
Shared_debug_cppflags	:= $(Shared_debug_common_cflags)
Shared_debug_cppflags  += -fno-rtti
Shared_debug_lflags    := $(Shared_custom_lflags)
Shared_debug_lflags    += $(addprefix -L, $(Shared_debug_lpaths))
Shared_debug_lflags    += -Wl,--start-group $(addprefix -l, $(Shared_debug_libraries)) -Wl,--end-group
Shared_debug_lflags  += --sysroot=../../../../Externals/android-ndk-r9d/platforms/android-16/arch-arm
Shared_debug_lflags  += -Wl,--no-undefined
Shared_debug_lflags  += -Wl,-z,noexecstack -L../../../../Externals/android-ndk-r9d/sources/cxx-stl/gnu-libstdc++/4.8/libs/armeabi-v7a -Wl,-rpath-link=../../../../Externals/android-ndk-r9d/platforms/android-16/arch-arm/usr/lib
#Shared_debug_lflags  += -pie 
#需要注释掉同时 -shared 可以解决 crtbegin_dynamic.o:crtbrand.c:function _start: error: undefined reference to 'main'异常
Shared_debug_objsdir  = $(OBJS_DIR)/Shared_debug
Shared_debug_cpp_o    = $(addprefix $(Shared_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(Shared_cppfiles)))))
Shared_debug_cc_o    = $(addprefix $(Shared_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(Shared_ccfiles)))))
Shared_debug_c_o      = $(addprefix $(Shared_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(Shared_cfiles)))))
Shared_debug_obj      = $(Shared_debug_cpp_o) $(Shared_debug_cc_o) $(Shared_debug_c_o)
Shared_debug_bin      := libphysxDEBUG.so

clean_Shared_debug: 
	@$(ECHO) clean Shared debug
	@$(RMDIR) $(Shared_debug_objsdir)
	@$(RMDIR) $(Shared_debug_bin)
	@$(RMDIR) $(DEPSDIR)/Shared/debug

build_Shared_debug: postbuild_Shared_debug
postbuild_Shared_debug: mainbuild_Shared_debug
mainbuild_Shared_debug: prebuild_Shared_debug $(Shared_debug_bin)
prebuild_Shared_debug:

$(Shared_debug_bin): $(Shared_debug_obj)
	mkdir -p `dirname libphysxDEBUG.so`
	$(CCLD) -shared $(Shared_debug_obj) $(Shared_debug_lflags) -o $(Shared_debug_bin) 
	$(ECHO) building $@ complete!

Shared_debug_DEPDIR = $(dir $(@))/$(*F)
$(Shared_debug_cpp_o): $(Shared_debug_objsdir)/%.o:
	$(ECHO) Shared: compiling debug $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(Shared_debug_objsdir),, $@))), $(Shared_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(Shared_debug_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(Shared_debug_objsdir),, $@))), $(Shared_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/Shared/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(Shared_debug_objsdir),, $@))), $(Shared_cppfiles))))))
	cp $(Shared_debug_DEPDIR).d $(addprefix $(DEPSDIR)/Shared/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(Shared_debug_objsdir),, $@))), $(Shared_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(Shared_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/Shared/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(Shared_debug_objsdir),, $@))), $(Shared_cppfiles))))).P; \
	  rm -f $(Shared_debug_DEPDIR).d

$(Shared_debug_cc_o): $(Shared_debug_objsdir)/%.o:
	$(ECHO) Shared: compiling debug $(filter %$(strip $(subst .cc.o,.cc, $(subst $(Shared_debug_objsdir),, $@))), $(Shared_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(Shared_debug_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(Shared_debug_objsdir),, $@))), $(Shared_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(Shared_debug_objsdir),, $@))), $(Shared_ccfiles))))))
	cp $(Shared_debug_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(Shared_debug_objsdir),, $@))), $(Shared_ccfiles))))).debug.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(Shared_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(Shared_debug_objsdir),, $@))), $(Shared_ccfiles))))).debug.P; \
	  rm -f $(Shared_debug_DEPDIR).d

$(Shared_debug_c_o): $(Shared_debug_objsdir)/%.o:
	$(ECHO) Shared: compiling debug $(filter %$(strip $(subst .c.o,.c, $(subst $(Shared_debug_objsdir),, $@))), $(Shared_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(Shared_debug_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(Shared_debug_objsdir),, $@))), $(Shared_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/Shared/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(Shared_debug_objsdir),, $@))), $(Shared_cfiles))))))
	cp $(Shared_debug_DEPDIR).d $(addprefix $(DEPSDIR)/Shared/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(Shared_debug_objsdir),, $@))), $(Shared_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(Shared_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/Shared/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(Shared_debug_objsdir),, $@))), $(Shared_cfiles))))).P; \
	  rm -f $(Shared_debug_DEPDIR).d



Shared_release_hpaths    := 
Shared_release_hpaths    += ./../../../Include
Shared_release_hpaths    += ./../../../../PxShared/include
Shared_release_hpaths    += ./../../../../PxShared/src/foundation/include
#Shared_release_hpaths    += ./../../../../PxShared/src/fastxml/include
Shared_release_hpaths    += ./../../../../Externals/android-ndk-r9d/sources/cxx-stl/gnu-libstdc++/4.8/include
Shared_release_hpaths    += ./../../../../Externals/android-ndk-r9d/sources/cxx-stl/gnu-libstdc++/4.8/libs/armeabi-v7a/include
Shared_release_lpaths    := 
Shared_release_lpaths    += ./../../../../Externals/nvToolsExt/1/lib/armv7
Shared_release_lpaths    += ./../../../Lib/android16
#Shared_release_lpaths    += ./../../lib/android16
Shared_release_lpaths    += ./../../../../PxShared/lib/android16
#Shared_release_lpaths    += ./../../lib/android16
Shared_release_defines   := $(Shared_custom_defines)
Shared_release_defines   += ANDROID
Shared_release_defines   += GLES2
Shared_release_defines   += __STDC_LIMIT_MACROS
Shared_release_defines   += __ARM_ARCH_5__
Shared_release_defines   += __ARM_ARCH_5T__
Shared_release_defines   += __ARM_ARCH_5E__
Shared_release_defines   += __ARM_ARCH_5TE__
Shared_release_defines   += NDEBUG
#Shared_release_defines   += PX_SUPPORT_PVD=0
Shared_release_defines   += PHYSX_PROFILE_SDK
Shared_release_libraries := 
#Shared_release_libraries += SnippetUtils
Shared_release_libraries += log
Shared_release_libraries += gnustl_static
Shared_release_libraries += supc++
Shared_release_libraries += m
Shared_release_libraries += c
Shared_release_libraries += nvToolsExt
Shared_release_libraries += PhysX3Common
Shared_release_libraries += PhysX3
#Shared_release_libraries += PhysX3Vehicle
Shared_release_libraries += PhysX3Cooking
Shared_release_libraries += PhysX3Extensions
Shared_release_libraries += PhysX3CharacterKinematic
#Shared_release_libraries += SnippetUtils
Shared_release_libraries += PxFoundation
#Shared_release_libraries += PsFastXml
#Shared_release_libraries += PxPvdSDK
Shared_release_common_cflags	:= $(Shared_custom_cflags)
Shared_release_common_cflags    += -MMD
Shared_release_common_cflags    += $(addprefix -D, $(Shared_release_defines))
Shared_release_common_cflags    += $(addprefix -I, $(Shared_release_hpaths))
Shared_release_common_cflags  += -Werror
Shared_release_common_cflags  += -fpic -fexceptions -fpermissive
Shared_release_common_cflags  += -isysroot ../../../../Externals/android-ndk-r9d/platforms/android-16/arch-arm
Shared_release_common_cflags  += -march=armv7-a -mfpu=neon -marm -mfloat-abi=softfp -mthumb-interwork
#Shared_release_common_cflags  += -Wall -Wextra -Wpedantic -Wstrict-aliasing=2
Shared_release_common_cflags  += -Wno-maybe-uninitialized
Shared_release_common_cflags  += -Wno-pedantic
Shared_release_common_cflags  += -fPIE
Shared_release_common_cflags  += -O3 -fno-strict-aliasing
Shared_release_common_cflags  += -ffunction-sections -funwind-tables -fstack-protector
Shared_release_common_cflags  += -fomit-frame-pointer -funswitch-loops -finline-limit=300
Shared_release_cflags	:= $(Shared_release_common_cflags)
Shared_release_cppflags	:= $(Shared_release_common_cflags)
Shared_release_cppflags  += -fno-rtti
Shared_release_lflags    := $(Shared_custom_lflags)
Shared_release_lflags    += $(addprefix -L, $(Shared_release_lpaths))
Shared_release_lflags    += -Wl,--start-group $(addprefix -l, $(Shared_release_libraries)) -Wl,--end-group
Shared_release_lflags  += --sysroot=../../../../Externals/android-ndk-r9d/platforms/android-16/arch-arm
Shared_release_lflags  += -Wl,--no-undefined
Shared_release_lflags  += -Wl,-z,noexecstack -L../../../../Externals/android-ndk-r9d/sources/cxx-stl/gnu-libstdc++/4.8/libs/armeabi-v7a -Wl,-rpath-link=../../../../Externals/android-ndk-r9d/platforms/android-16/arch-arm/usr/lib
#Shared_release_lflags  += -pie
Shared_release_objsdir  = $(OBJS_DIR)/Shared_release
Shared_release_cpp_o    = $(addprefix $(Shared_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(Shared_cppfiles)))))
Shared_release_cc_o    = $(addprefix $(Shared_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(Shared_ccfiles)))))
Shared_release_c_o      = $(addprefix $(Shared_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(Shared_cfiles)))))
Shared_release_obj      = $(Shared_release_cpp_o) $(Shared_release_cc_o) $(Shared_release_c_o)
Shared_release_bin      := libphysx.so

clean_Shared_release: 
	@$(ECHO) clean Shared release
	@$(RMDIR) $(Shared_release_objsdir)
	@$(RMDIR) $(Shared_release_bin)
	@$(RMDIR) $(DEPSDIR)/Shared/release

build_Shared_release: postbuild_Shared_release
postbuild_Shared_release: mainbuild_Shared_release
mainbuild_Shared_release: prebuild_Shared_release $(Shared_release_bin)
prebuild_Shared_release:
	
$(Shared_release_bin): $(Shared_release_obj) 
	mkdir -p `dirname libphysx.so`
	$(CCLD) -shared $(Shared_release_obj) $(Shared_release_lflags) -o $(Shared_release_bin) 
	$(ECHO) building $@ complete!


Shared_release_DEPDIR = $(dir $(@))/$(*F)
$(Shared_release_cpp_o): $(Shared_release_objsdir)/%.o:
	$(ECHO) Shared: compiling release $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(Shared_release_objsdir),, $@))), $(Shared_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(Shared_release_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(Shared_release_objsdir),, $@))), $(Shared_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/Shared/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(Shared_release_objsdir),, $@))), $(Shared_cppfiles))))))
	cp $(Shared_release_DEPDIR).d $(addprefix $(DEPSDIR)/Shared/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(Shared_release_objsdir),, $@))), $(Shared_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(Shared_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/Shared/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(Shared_release_objsdir),, $@))), $(Shared_cppfiles))))).P; \
	  rm -f $(Shared_release_DEPDIR).d

$(Shared_release_cc_o): $(Shared_release_objsdir)/%.o:
	$(ECHO) Shared: compiling release $(filter %$(strip $(subst .cc.o,.cc, $(subst $(Shared_release_objsdir),, $@))), $(Shared_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(Shared_release_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(Shared_release_objsdir),, $@))), $(Shared_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(Shared_release_objsdir),, $@))), $(Shared_ccfiles))))))
	cp $(Shared_release_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(Shared_release_objsdir),, $@))), $(Shared_ccfiles))))).release.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(Shared_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(Shared_release_objsdir),, $@))), $(Shared_ccfiles))))).release.P; \
	  rm -f $(Shared_release_DEPDIR).d

$(Shared_release_c_o): $(Shared_release_objsdir)/%.o:
	$(ECHO) Shared: compiling release $(filter %$(strip $(subst .c.o,.c, $(subst $(Shared_release_objsdir),, $@))), $(Shared_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(Shared_release_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(Shared_release_objsdir),, $@))), $(Shared_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/Shared/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(Shared_release_objsdir),, $@))), $(Shared_cfiles))))))
	cp $(Shared_release_DEPDIR).d $(addprefix $(DEPSDIR)/Shared/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(Shared_release_objsdir),, $@))), $(Shared_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(Shared_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/Shared/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(Shared_release_objsdir),, $@))), $(Shared_cfiles))))).P; \
	  rm -f $(Shared_release_DEPDIR).d

clean_Shared:  clean_Shared_debug clean_Shared_release
	rm -rf $(DEPSDIR)

export VERBOSE
ifndef VERBOSE
.SILENT:
endif
